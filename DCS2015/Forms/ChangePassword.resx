<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AIAQAgBACA//2Q==
</value>
  </data>
</root>